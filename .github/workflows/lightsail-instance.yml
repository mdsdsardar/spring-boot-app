name: Create AWS Lightsail Instance

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
          
jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform
      
    - name: Terraform Plan
      if: github.event.inputs.action == 'apply'
      run: terraform plan -out=plan.tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve plan.tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform

    - name: Remove Terraform Plan File
      if: github.event.inputs.action == 'apply'
      run: rm plan.tfplan
      working-directory: ./terraform


    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve
      working-directory: ./terraform

    - name: Wait for Instance to be Running
      if: github.event.inputs.action == 'apply'
      run: |
        INSTANCE_NAME="saad-lightsail-instance"
        STATE="pending"
        while [ "$STATE" != "running" ]; do
          sleep 60
          STATE=$(aws lightsail get-instance-state --instance-name $INSTANCE_NAME --query 'state.name' --output text)
          echo "Current state: $STATE"
        done

    - name: Get Instance IP Address
      if: github.event.inputs.action == 'apply'
      run: |
        INSTANCE_NAME="saad-lightsail-instance"
        IP_ADDRESS=$(aws lightsail get-instance --instance-name $INSTANCE_NAME --query 'instance.publicIpAddress' --output text)
        echo "Instance IP Address: $IP_ADDRESS"
